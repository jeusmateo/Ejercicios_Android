Build1=Default,b4a.example
File1=GAMEOVER.png
File2=JUG1.png
File3=JUG2.png
File4=Layout.bal
FileGroup1=Nuevo Grupo
FileGroup2=Nuevo Grupo
FileGroup3=Nuevo Grupo
FileGroup4=Default Group
Group=Default Group
Library1=core
Library2=xui
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="14" android:targetSdkVersion="29"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~
Module1=Starter
NumberOfFiles=4
NumberOfLibraries=2
NumberOfModules=1
Version=11.2
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Adivina número
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Private xui As XUI
	Private timer As Timer
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	Private txtP1 As EditText
	Private txtP2 As EditText
	Private lblMensajes As Label
	Private lblP1 As Label
	Private lblP2 As Label
	Private btnP1 As Button
	Private btnP2 As Button
	
	Private randomN As Byte
	
	Private turn As Byte

	Private btnPlay As Button
	
	Private time As Byte

	Private lblTiempo As Label
	
	Private win As Boolean
	
	Private img As ImageView
End Sub

Sub Activity_Create(FirstTime As Boolean)
	Activity.LoadLayout("Layout")
	timer.Initialize("timer", 1000)
End Sub
	
Private Sub timer_tick
	time = time - 1
	lblTiempo.Text = "Tiempo: " & time
	
	If time == 0 Then
		timer.Enabled = False
		GameOver
	End If
	
	
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Private Sub StartGame
	win = False
	time = 40
	turn = 1
	
	lblTiempo.Text = "Tiempo: " & time
	lblMensajes.Text = ""
	img.Background = Null
	
	btnPlay.Enabled = False
	timer.Enabled = True
	
	P1Visible(True)
	txtP1.RequestFocus
	
	
	randomN = Rnd(1, 101)
	Log(randomN)

End Sub

Private Sub GameOver
	
	P1Visible(False)
	P2Visible(False)
	timer.Enabled = False
	btnPlay.Enabled = True
	
	lblTiempo.Text = "Tiempo: "
	lblMensajes.Text = ""
	
	
	If win Then
'		MsgboxAsync("HAS GANADO JUGADOR " & turn, "GAME OVER")
'		lblMensajes.Text = "GANADOR " & pWinner
				
		Select turn
			Case 1:
				img.SetBackgroundImage(LoadBitmap(File.DirAssets, "JUG1.png"))
			Case 2:
				img.SetBackgroundImage(LoadBitmap(File.DirAssets, "JUG2.png"))
		End Select
		Return		
	End If
	
	' Si no gano perdió
	img.SetBackgroundImage(LoadBitmap(File.DirAssets, "GAMEOVER.png"))

End Sub

Private Sub P1Visible(bool As Boolean)
	lblP1.Enabled = bool
	txtP1.Enabled = bool
	btnP1.Enabled = bool
End Sub

Private Sub P2Visible(bool As Boolean)
	lblP2.Enabled = bool
	txtP2.Enabled = bool
	btnP2.Enabled = bool
End Sub

Private Sub btnPlay_Click
	StartGame
End Sub

Private Sub CheckNum(num As Int, pTurnName As String)

	Log(pTurnName & " - " & num)
	If num == randomN Then
		win = True
		GameOver
		Return
	End If
	
	If num < randomN Then
'		MsgboxAsync("El numero es mayor", "!!!")
		lblMensajes.Text = "El numero es mayor"
		
	Else If num > randomN Then
'		MsgboxAsync("El numero es menor", "!!!")
		lblMensajes.Text = "El numero es menor"
	End If
	
	turnChange

End Sub

Private Sub turnChange()
	If turn == 1 Then
		turn = 2
		P1Visible(False)
		P2Visible(True)
		txtP2.RequestFocus
	Else
		turn = 1
		P1Visible(True)
		P2Visible(False)
		txtP1.RequestFocus
	End If
End Sub

Private Sub btnP1_Click
	
	If txtP1.Text == "" Then
		MsgboxAsync("Digite un valor", "!!!")
		Return
	End If
	
	Dim inputPlayer As Int

	inputPlayer = txtP1.Text
	
	CheckNum(inputPlayer, "JUGADOR 1")
	txtP1.Text = ""
End Sub

Private Sub btnP2_Click
	
	If txtP2.Text == "" Then
		MsgboxAsync("Digite un valor", "!!!")
		Return
	End If
	
	Dim inputPlayer As Int
	
	inputPlayer = txtP2.Text
	
	CheckNum(inputPlayer, "JUGADOR 2")
	txtP2.Text = ""
End Sub

