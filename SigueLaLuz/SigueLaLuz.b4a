Build1=Default,b4a.example
File1=Layout.bal
FileGroup1=Default Group
Group=Default Group
Library1=core
Library2=xui
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="14" android:targetSdkVersion="30"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~
Module1=Starter
Module2=tools
NumberOfFiles=1
NumberOfLibraries=2
NumberOfModules=2
Version=11.5
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Sigue la Luz
	#VersionCode: 1
	#VersionName: 0.0.1
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: portrait
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: False
	#BridgeLogger: True
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Private xui As XUI
	Private timer As Timer
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	Private time, btnCount, level As Byte
	Private pnlMain As Panel
	Private lightsList As List
	Private btnJugar As Button
	
	Private blackColor, lightColor, correctColor, wrongColor As ColorDrawable
	
End Sub

Sub Activity_Create(FirstTime As Boolean)
	Activity.LoadLayout("Layout")
	
	blackColor.Initialize(Colors.RGB(28, 28, 30), 16)
	lightColor.Initialize(Colors.RGB(255, 204, 0), 16)
	correctColor.Initialize(Colors.RGB(52, 199, 89), 16)
	wrongColor.Initialize(Colors.RGB(255, 59, 48), 16)
	
	
	tools.SetButtonTags(pnlMain)
	tools.ButtonState(pnlMain, False)
	tools.setColorViews(pnlMain, blackColor)
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Private Sub mainTimer_Tick 'BORRADOR
	If time > lightsList.Size Then
		timer.Enabled = False
		tools.MessageLogger("DESACTIVADO")
		Return
	End If
	
	Log("Tiempo: " & time)
	
	If time < lightsList.Size And (time Mod 2) == 0 Then
		pnlMain.GetView(lightsList.Get(time)).Background = lightColor
		Log("Luz encendida: " & lightsList.Get(time))
	End If
	
	If time Mod 2 == 1 Then
		pnlMain.GetView(lightsList.Get(time - 1)).Background = blackColor
	End If

	time = time + 1

End Sub

Private Sub ShowLights
	time = 0
	lightsList = tools.GenerateRandomPlaces(level, pnlMain.NumberOfViews - 1)
	tools.MessageLogger(lightsList)
	timer.Enabled = True
End Sub

Private Sub btnJugar_Click
	Sender.As(Button).Visible = False
	tools.ButtonState(pnlMain, True)
	tools.setColorViews(pnlMain, blackColor)

	level = 1
	btnCount = 0
	timer.Initialize("mainTimer", 500)
	ShowLights	

End Sub



Private Sub CheckResult_Click
	Dim btn As Button = Sender
	Dim bntVal As Byte = btn.Tag
	
	If bntVal == lightsList.Get(btnCount * 2) Then
		btn.Background = correctColor
		btnCount = btnCount + 1
		If btnCount >= level + 2 Then
			btnCount = 0
			ShowLights
			tools.setColorViews(pnlMain, blackColor)

		End If
		
	Else
		btn.Background = wrongColor
		btnCount = 0
		btnJugar.Visible = True
		tools.ButtonState(pnlMain, False)
		
	End If
	
End Sub